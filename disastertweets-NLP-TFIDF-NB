{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":17777,"databundleVersionId":869809,"sourceType":"competition"}],"dockerImageVersionId":31089,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-09-04T11:34:22.530179Z","iopub.execute_input":"2025-09-04T11:34:22.530416Z","iopub.status.idle":"2025-09-04T11:34:24.474688Z","shell.execute_reply.started":"2025-09-04T11:34:22.530396Z","shell.execute_reply":"2025-09-04T11:34:24.473713Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/nlp-getting-started/sample_submission.csv\n/kaggle/input/nlp-getting-started/train.csv\n/kaggle/input/nlp-getting-started/test.csv\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"traindf=pd.read_csv('/kaggle/input/nlp-getting-started/train.csv')\ntraindf.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-04T11:35:05.334660Z","iopub.execute_input":"2025-09-04T11:35:05.335613Z","iopub.status.idle":"2025-09-04T11:35:05.410086Z","shell.execute_reply.started":"2025-09-04T11:35:05.335570Z","shell.execute_reply":"2025-09-04T11:35:05.409080Z"}},"outputs":[{"execution_count":2,"output_type":"execute_result","data":{"text/plain":"   id keyword location                                               text  \\\n0   1     NaN      NaN  Our Deeds are the Reason of this #earthquake M...   \n1   4     NaN      NaN             Forest fire near La Ronge Sask. Canada   \n2   5     NaN      NaN  All residents asked to 'shelter in place' are ...   \n3   6     NaN      NaN  13,000 people receive #wildfires evacuation or...   \n4   7     NaN      NaN  Just got sent this photo from Ruby #Alaska as ...   \n\n   target  \n0       1  \n1       1  \n2       1  \n3       1  \n4       1  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>keyword</th>\n      <th>location</th>\n      <th>text</th>\n      <th>target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Our Deeds are the Reason of this #earthquake M...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Forest fire near La Ronge Sask. Canada</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>All residents asked to 'shelter in place' are ...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>13,000 people receive #wildfires evacuation or...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Just got sent this photo from Ruby #Alaska as ...</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":2},{"cell_type":"code","source":"traindf['keyword'].isnull().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-04T11:39:06.402768Z","iopub.execute_input":"2025-09-04T11:39:06.403063Z","iopub.status.idle":"2025-09-04T11:39:06.409504Z","shell.execute_reply.started":"2025-09-04T11:39:06.403041Z","shell.execute_reply":"2025-09-04T11:39:06.408746Z"}},"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"61"},"metadata":{}}],"execution_count":11},{"cell_type":"code","source":"traindf.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-04T11:39:07.861405Z","iopub.execute_input":"2025-09-04T11:39:07.861696Z","iopub.status.idle":"2025-09-04T11:39:07.867906Z","shell.execute_reply.started":"2025-09-04T11:39:07.861672Z","shell.execute_reply":"2025-09-04T11:39:07.867023Z"}},"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"(7613, 5)"},"metadata":{}}],"execution_count":12},{"cell_type":"code","source":"traindf['location'].value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-04T11:39:48.190060Z","iopub.execute_input":"2025-09-04T11:39:48.190325Z","iopub.status.idle":"2025-09-04T11:39:48.200884Z","shell.execute_reply.started":"2025-09-04T11:39:48.190307Z","shell.execute_reply":"2025-09-04T11:39:48.199857Z"}},"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"location\nUSA                    104\nNew York                71\nUnited States           50\nLondon                  45\nCanada                  29\n                      ... \nMontrÌ©al, QuÌ©bec       1\nMontreal                 1\nÌÏT: 6.4682,3.18287      1\nLive4Heed??              1\nLincoln                  1\nName: count, Length: 3341, dtype: int64"},"metadata":{}}],"execution_count":14},{"cell_type":"code","source":"traindf.drop(['keyword','location'],axis=1,inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-04T11:45:15.462404Z","iopub.execute_input":"2025-09-04T11:45:15.462781Z","iopub.status.idle":"2025-09-04T11:45:15.474070Z","shell.execute_reply.started":"2025-09-04T11:45:15.462745Z","shell.execute_reply":"2025-09-04T11:45:15.473146Z"}},"outputs":[],"execution_count":15},{"cell_type":"code","source":"traindf.drop('id',axis=1,inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-04T11:45:42.411032Z","iopub.execute_input":"2025-09-04T11:45:42.411304Z","iopub.status.idle":"2025-09-04T11:45:42.417622Z","shell.execute_reply.started":"2025-09-04T11:45:42.411285Z","shell.execute_reply":"2025-09-04T11:45:42.416522Z"}},"outputs":[],"execution_count":17},{"cell_type":"code","source":"traindf.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-04T11:45:47.428157Z","iopub.execute_input":"2025-09-04T11:45:47.428445Z","iopub.status.idle":"2025-09-04T11:45:47.436519Z","shell.execute_reply.started":"2025-09-04T11:45:47.428423Z","shell.execute_reply":"2025-09-04T11:45:47.435794Z"}},"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"                                                text  target\n0  Our Deeds are the Reason of this #earthquake M...       1\n1             Forest fire near La Ronge Sask. Canada       1\n2  All residents asked to 'shelter in place' are ...       1\n3  13,000 people receive #wildfires evacuation or...       1\n4  Just got sent this photo from Ruby #Alaska as ...       1","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>text</th>\n      <th>target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Our Deeds are the Reason of this #earthquake M...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Forest fire near La Ronge Sask. Canada</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>All residents asked to 'shelter in place' are ...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>13,000 people receive #wildfires evacuation or...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Just got sent this photo from Ruby #Alaska as ...</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":18},{"cell_type":"code","source":"x=traindf.text\ny=traindf.target","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-04T11:46:55.923507Z","iopub.execute_input":"2025-09-04T11:46:55.923841Z","iopub.status.idle":"2025-09-04T11:46:55.928606Z","shell.execute_reply.started":"2025-09-04T11:46:55.923816Z","shell.execute_reply":"2025-09-04T11:46:55.927660Z"}},"outputs":[],"execution_count":19},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.metrics import f1_score, classification_report","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-04T11:53:54.905090Z","iopub.execute_input":"2025-09-04T11:53:54.905390Z","iopub.status.idle":"2025-09-04T11:53:54.932077Z","shell.execute_reply.started":"2025-09-04T11:53:54.905369Z","shell.execute_reply":"2025-09-04T11:53:54.931152Z"}},"outputs":[],"execution_count":21},{"cell_type":"code","source":"xtrain,xval,ytrain,yval= train_test_split(x,y,test_size=0.2,random_state=42)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-04T11:55:40.264631Z","iopub.execute_input":"2025-09-04T11:55:40.265061Z","iopub.status.idle":"2025-09-04T11:55:40.274619Z","shell.execute_reply.started":"2025-09-04T11:55:40.265031Z","shell.execute_reply":"2025-09-04T11:55:40.273719Z"}},"outputs":[],"execution_count":22},{"cell_type":"code","source":"tfidf=TfidfVectorizer(max_features=10000, ngram_range=(1,2),stop_words='english')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-04T11:56:36.922470Z","iopub.execute_input":"2025-09-04T11:56:36.923168Z","iopub.status.idle":"2025-09-04T11:56:36.927634Z","shell.execute_reply.started":"2025-09-04T11:56:36.923133Z","shell.execute_reply":"2025-09-04T11:56:36.926651Z"}},"outputs":[],"execution_count":23},{"cell_type":"code","source":"xtrainv=tfidf.fit_transform(xtrain)\nxvalv=tfidf.fit_transform(xval)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-04T12:00:05.232648Z","iopub.execute_input":"2025-09-04T12:00:05.233509Z","iopub.status.idle":"2025-09-04T12:00:05.652273Z","shell.execute_reply.started":"2025-09-04T12:00:05.233480Z","shell.execute_reply":"2025-09-04T12:00:05.651407Z"}},"outputs":[],"execution_count":25},{"cell_type":"code","source":"model=MultinomialNB()\nmodel.fit(xtrainv,ytrain)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-04T12:00:58.373937Z","iopub.execute_input":"2025-09-04T12:00:58.374327Z","iopub.status.idle":"2025-09-04T12:00:58.395853Z","shell.execute_reply.started":"2025-09-04T12:00:58.374299Z","shell.execute_reply":"2025-09-04T12:00:58.394979Z"}},"outputs":[{"execution_count":27,"output_type":"execute_result","data":{"text/plain":"MultinomialNB()","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>MultinomialNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">MultinomialNB</label><div class=\"sk-toggleable__content\"><pre>MultinomialNB()</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":27},{"cell_type":"code","source":"ypred=model.predict(xvalv)\nprint(classification_report(yval,ypred),'\\n',f1_score(yval,ypred))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-04T12:02:32.741839Z","iopub.execute_input":"2025-09-04T12:02:32.742181Z","iopub.status.idle":"2025-09-04T12:02:32.759341Z","shell.execute_reply.started":"2025-09-04T12:02:32.742156Z","shell.execute_reply":"2025-09-04T12:02:32.758422Z"}},"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       0.58      0.59      0.59       874\n           1       0.44      0.43      0.43       649\n\n    accuracy                           0.52      1523\n   macro avg       0.51      0.51      0.51      1523\nweighted avg       0.52      0.52      0.52      1523\n \n 0.4345794392523365\n","output_type":"stream"}],"execution_count":31},{"cell_type":"code","source":"testdf=pd.read_csv('/kaggle/input/nlp-getting-started/test.csv')\ntestdf.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-04T12:34:46.050358Z","iopub.execute_input":"2025-09-04T12:34:46.050640Z","iopub.status.idle":"2025-09-04T12:34:46.073373Z","shell.execute_reply.started":"2025-09-04T12:34:46.050621Z","shell.execute_reply":"2025-09-04T12:34:46.072518Z"}},"outputs":[{"execution_count":54,"output_type":"execute_result","data":{"text/plain":"   id keyword location                                               text\n0   0     NaN      NaN                 Just happened a terrible car crash\n1   2     NaN      NaN  Heard about #earthquake is different cities, s...\n2   3     NaN      NaN  there is a forest fire at spot pond, geese are...\n3   9     NaN      NaN           Apocalypse lighting. #Spokane #wildfires\n4  11     NaN      NaN      Typhoon Soudelor kills 28 in China and Taiwan","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>keyword</th>\n      <th>location</th>\n      <th>text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Just happened a terrible car crash</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Heard about #earthquake is different cities, s...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>there is a forest fire at spot pond, geese are...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>9</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Apocalypse lighting. #Spokane #wildfires</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>11</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Typhoon Soudelor kills 28 in China and Taiwan</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":54},{"cell_type":"code","source":"ids=testdf['id']\ntestdf.drop(['id','keyword','location'],axis=1,inplace=True)\ntest=tfidf.transform(testdf['text'])\ntargets=model.predict(test)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-04T12:34:48.170554Z","iopub.execute_input":"2025-09-04T12:34:48.170889Z","iopub.status.idle":"2025-09-04T12:34:48.252922Z","shell.execute_reply.started":"2025-09-04T12:34:48.170863Z","shell.execute_reply":"2025-09-04T12:34:48.252082Z"}},"outputs":[],"execution_count":55},{"cell_type":"code","source":"submission=pd.DataFrame({\n    'id':ids,\n    'target':targets.flatten()\n})\nsubmission.to_csv('submission.csv',index=False)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-04T12:34:54.393559Z","iopub.execute_input":"2025-09-04T12:34:54.393902Z","iopub.status.idle":"2025-09-04T12:34:54.407178Z","shell.execute_reply.started":"2025-09-04T12:34:54.393876Z","shell.execute_reply":"2025-09-04T12:34:54.406087Z"}},"outputs":[],"execution_count":56}]}